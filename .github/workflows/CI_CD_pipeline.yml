# Name of Workflow
name: Deploy app

# Control trigger for workflow
on:
  # Triggers the workflow on push or pull request events but only on the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  # Trigger workflow manually through github actions UI
  workflow_dispatch:

 #declare environment variables   
env:
  AWS_REGION: us-east-1
  EB_ENVIRONMENT_NAME: cds-flask-app-env
  EB_APPLICATION_NAME: loan-business-glossary-app
  EB_DEPLOY_PACKAGE: deploy.zip
  TERRAFORM_VERSION: 1.5.0
  DB_HOST: database-1.cvhifpi70v8r.us-east-1.rds.amazonaws.com
  DB_USER: ${{ secrets.DB_USER }}
  DB_NAME: Cloud_DevOPsSec
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  # Static Code Analysis - JOB STATIC CODE (Corrected name)
  CI: #Add code to Github main branch
    runs-on: ubuntu-latest
    steps:
      # 1: Get code from GitHub
      - name: Fetch code
        uses: actions/checkout@v3

      # 2: Install python
      - name: Install Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4: Lint code
      - name: Install black
        run: pip install black
      - name: Change working directory
        run: cd ./website
      - name: Lint code
        run: black .
        working-directory: ./website

      # 5: Run tests 
        # Add your actual test commands here

  IAC: # setup AWS infra
    needs: CI  
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' 

    steps:
        # 1: Get code from GitHub
      - name: Fetch code
        uses: actions/checkout@v3

        # 2: declare AWS access credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}
        
        #3: install terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
        
        #4: intialiaze a terraform directory
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
      
        #5: check for errors in terraform main.tf file
      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate
      
      - name: Check if environment exists (modify based on your needs)
        run: |
          aws elasticbeanstalk describe-environments --environment-names ${{ env.EB_ENVIRONMENT_NAME }} | jq -r '.Environments | length > 0'
        id: environment_exists
        
        #6: create terraform plan file
      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out tfplan
        if: steps.environment_exists.outputs == 'false'
          
        #7: Execute terraform steps
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
        if: steps.environment_exists.outputs == 'false'  

  CD: #deploy app to AWS elastic beanstalk
    needs: IAC  
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' 

    steps:
      # 1: Get code from GitHub
      - name: Fetch code
        uses: actions/checkout@v3

      #2: declare aws access credentials
      - name: setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}
      
      #3: Create deployment package 
      - name: Generate deployment package
        run: zip -r ${{ env.EB_DEPLOY_PACKAGE }} . -x "*.git*" "*.github*" "terraform/*"

      #4: Deplpy webapp to AWS Elastic Beanstalk  
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
          region: ${{ env.AWS_REGION }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          version_label: ${{ github.sha }}
          deployment_package: ${{ env.EB_DEPLOY_PACKAGE }}